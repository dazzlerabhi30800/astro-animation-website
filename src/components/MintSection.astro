---
type mintData = {
    img: string;
    heading: string;
    desc: string;
};
const mintData: Array<mintData> = [
    {
        img: "./nft/mint-icon-1.png",
        heading: "Connect your wallet",
        desc: "Use Trust Wallet, Metawork or any wallet to connect to the app",
    },
    {
        img: "./nft/mint-icon-2.png",
        heading: "Select your quantity",
        desc: "Upload your NFTs and set a title description and price",
    },
    {
        img: "./nft/mint-icon-3.png",
        heading: "Confirm transaction",
        desc: "Earn ETH an BIT for all your NFTs that you sell on our marketplace",
    },
    {
        img: "./nft/mint-icon-4.png",
        heading: "Receive your NFTs",
        desc: "Latin professor at Hampden-Sydney College in Virginia",
    },
];
---

<section class="section mint-section">
    <h2 class="mint-heading">How to Mint</h2>
    <div class="mint-wrapper">
        {
            mintData.map((mint) => {
                return (
                    <div class="mint-comp">
                        <img
                            src={mint.img}
                            class="mint-img"
                            alt={mint.heading}
                        />
                        <div class="mint-info">
                            <h3>{mint.heading}</h3>
                            <p>{mint.desc}</p>
                        </div>
                    </div>
                );
            })
        }
    </div>
</section>

<script>
    import { gsap } from "gsap";
    import ScrollTrigger from "gsap/dist/ScrollTrigger";
    gsap.registerPlugin(ScrollTrigger);

    const mintWrapper = document.querySelector(".mint-wrapper");
    const mintHeading = document.querySelector(".mint-heading");

    gsap.fromTo(
        mintHeading,
        {
            opacity: 0,
            x: 500,
            ease: "elastic.out(1.2,0.5)",
        },

        {
            scrollTrigger: {
                trigger: mintWrapper,
                start: "0% 90%",
                end: "bottom bottom",
            },
            opacity: 1,
            x: 0,
            duration: 3,
            ease: "elastic.out(1.2,0.5)",
        },
    );

    gsap.fromTo(
        mintWrapper,
        {
            opacity: 0,
            x: -500,
            ease: "elastic.out(1.2,0.5)",
        },

        {
            scrollTrigger: {
                trigger: mintWrapper,
                start: "0% 90%",
                end: "bottom bottom",
            },
            opacity: 1,
            x: 0,
            duration: 3,
            ease: "elastic.out(1.2,0.5)",
        },
    );
</script>

<style>
    .mint-section {
        justify-content: start;
        padding: 0rem;
        gap: 2rem;
    }
    .mint-wrapper {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 90%;
        padding: 1rem;
        gap: 2rem;
        margin: 0 auto;
        flex-wrap: wrap;
    }
    .mint-comp {
        display: grid;
        grid-template-columns: 100px auto;
        place-content: center;
        padding: 1.5rem;
        background: var(--comp-background);
        gap: 1rem;
        height: 150px;
        width: 100%;
        border-radius: 10px;
    }

    .mint-img {
        width: auto;
        height: 70px;
    }

    .mint-info {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        font-size: clamp(0.8rem, 1.2vw, 16px);
        font-weight: 500;
    }
    h3 {
        font-size: clamp(1.2rem, 1.8vw, 2.5rem);
    }
    .mint-info p {
        color: #e0e0e0;

        min-width: clamp(auto, 100%, 300px);
    }

    @media Screen and (min-width: 800px) {
        .mint-section {
            gap: 4rem;
            justify-content: center;
        }
        .mint-comp {
            transition: 0.3s linear;
            position: relative;
            height: 220px;
            width: 30%;
        }
        .mint-img {
            height: 90px;
        }
        .mint-comp::after {
            position: absolute;
            content: "";
            border-radius: 10px;
            inset: -3px;
            z-index: -1;
            background: linear-gradient(
                to left,
                rgb(107, 243, 243),
                rgb(239, 110, 241)
            );
            transform-origin: top left;
            transform: scale(0);
            transition: 0.4s cubic-bezier(0.39, 0.575, 0.565, 1);
        }
        .mint-comp:hover::after {
            transform: scale(1);
        }
    }
</style>
